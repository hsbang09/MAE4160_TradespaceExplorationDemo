function coverage = stkSetFOM(scenario, type)


    
% stkSetCoverageFOM(conid, path, type)
%   Set Figure of Merit parameters of a given CoverageDefinition in STK.
%
%   out = stkSetCoverageFOM(conid, 'path', 'type')
%
%       conid   - ID of connection socket to STK (returned from stkOpen)
%       'path'  - STK path of FOM to be changed
%       'type'  - Type of FOM to set. Examples: 'Revisit Time', 'Coverage
%       Time', 'Response Time'
%
%
%   Daniel Selva <dselva> -- 11/6/08
% -------------------------------------------------------------------------
% Revisit Time
% -------------------------------------------------------------------------
if strcmp(type, 'RevisitTime')
   
    call = ['FOMDefine ' path ' ' 'Definition ' type];

% -------------------------------------------------------------------------
% Response Time
% -------------------------------------------------------------------------
elseif strcmp(type, 'ResponseTime')
   
    call = ['FOMDefine ' path ' ' 'Definition ' type];
% -------------------------------------------------------------------------
% No other types of FOM supported by this function
% -------------------------------------------------------------------------
else
    fprintf('stkSetCoverageFOM: error - STK FOM type %s not recognized.\n', type);
    return;
end

% call the 'Define' STK Connect command
out = stkExec(conid, call);










	% IAgScenario scenario: Scenario object 
	%Create new Coverage Defintion and set the Bounds to an area target 
	coverage = scenario.Children.New('eCoverageDefinition', coverage_name); 
	coverage.Grid.BoundsType = 'eBoundsLat'; 
	
	covGrid = coverage.Grid; 
	bounds = covGrid.Bounds; 
    
    lat_min = -70;
    lat_max = +70;
    
    bounds.maxLatitude = lat_max;
    bounds.minLatitude = lat_min;
    
	%Define the Grid Resolution 
	Res = covGrid.Resolution; 
	Res.LatLon = 6;   %deg 
	
	%Set the satellite as the Asset 
	coverage.AssetList.Add('Satellite/Sat'); 
	 
	% Turn off Show Grid Points 
	coverage.Graphics.Static.IsPointsVisible = false; 
    
    
    
    

end




